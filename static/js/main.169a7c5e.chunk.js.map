{"version":3,"sources":["components/App/types.ts","components/InputWrapper/InputWrapper.tsx","heplers/helpers.ts","components/ValuesTable/ValuesTable.tsx","components/App/App.tsx","index.tsx"],"names":["System","InputWrapper","name","type","label","value","hasSubmit","onChange","onNext","onBack","isValid","error","className","htmlFor","id","onClick","disabled","storageKey","getWeight","system","Metric","getHeight","ValuesTable","weight","height","ValidationSchema","Yup","shape","min","max","required","positive","initialValues","App","useState","step","setStep","message","setMessage","time","setTime","useEffect","Date","now","count","window","localStorage","getItem","updatedCount","parseInt","toString","setItem","updateVisitCounter","handleNext","handleBack","logData","seconds","console","table","toFixed","Visits","isFirstStep","isSecondStep","isThirdStep","isFinished","onSubmit","vals","actions","setSubmitting","bmi","Math","pow","calculateBmi","status","Map","get","visitor","length","getMessage","validationSchema","validateOnMount","values","handleChange","errors","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.169a7c5e.chunk.js","sourcesContent":["export enum System {\r\n  Metric = \"metric\",\r\n  Imperial = \"imperial\",\r\n}\r\n\r\nexport type FormVals = {\r\n  system: System;\r\n  name: string;\r\n  height: number;\r\n  weight: number;\r\n};\r\n","import { ChangeEvent } from \"react\";\r\nimport \"./InputWrapper.css\";\r\n\r\ntype Props = {\r\n  name: string;\r\n  type: \"number\" | \"text\";\r\n  label: string;\r\n  value: string | number;\r\n  hasSubmit?: boolean;\r\n  onChange: (e: ChangeEvent<any>) => void;\r\n  onNext?: (() => void) | ((vals: any) => void);\r\n  onBack?: () => void;\r\n  isValid: boolean;\r\n  error?: string;\r\n};\r\n\r\nexport const InputWrapper: React.FC<Props> = ({\r\n  name,\r\n  type,\r\n  label,\r\n  value,\r\n  hasSubmit = false,\r\n  onChange,\r\n  onNext,\r\n  onBack,\r\n  isValid,\r\n  error,\r\n}) => (\r\n  <div className=\"input-wrapper\">\r\n    <label htmlFor={name}>{label}</label>\r\n    <input\r\n      className=\"input-wrapper__input\"\r\n      id={name}\r\n      type={type}\r\n      name={name}\r\n      onChange={onChange}\r\n      value={value}\r\n    />\r\n    <div className=\"cta-block\">\r\n      {onBack && (\r\n        <button onClick={onBack} type=\"button\" className=\"cta-block__back\">\r\n          Back\r\n        </button>\r\n      )}\r\n      {onNext && (\r\n        <button\r\n          onClick={onNext}\r\n          type={hasSubmit ? \"submit\" : \"button\"}\r\n          className=\"cta-block__next\"\r\n          disabled={isValid ? false : true}\r\n        >\r\n          Next\r\n        </button>\r\n      )}\r\n    </div>\r\n    {error && <p className=\"errorMessage\">{error}</p>}\r\n  </div>\r\n);\r\n","import { System } from \"../components/App\";\r\n\r\nconst storageKey = \"count\";\r\n\r\nexport const calculateBmi = (\r\n  height: number,\r\n  weight: number,\r\n  system: System = System.Metric\r\n): number => {\r\n  if (system === System.Metric) {\r\n    return (weight / Math.pow(height / 100, 2)) | 0;\r\n  }\r\n  return ((weight * 703) / Math.pow(height, 2)) | 0;\r\n};\r\n\r\nexport const getMessage = (name: string, bmi: number): string => {\r\n  const statusMap = new Map([\r\n    [bmi < 18.5, \"Underweight\"],\r\n    [bmi >= 18.5 && bmi <= 24.9, \"Normal weight\"],\r\n    [bmi >= 25.0 && bmi <= 29.9, \"Pre-obesity\"],\r\n    [bmi >= 30.0 && bmi <= 34.9, \"Obesity class I\"],\r\n    [bmi >= 35.0 && bmi <= 39.9, \"Obesity class II\"],\r\n    [bmi > 40, \"Obesity class III\"],\r\n  ]);\r\n  const status = statusMap.get(true);\r\n  const visitor = name.length > 0 ? name : \"Stranger\";\r\n\r\n  return `${visitor}, your BMI is ${bmi.toFixed(2)} - ${status}`;\r\n};\r\n\r\nexport const getTimeString = (seconds: number): string =>\r\n  seconds <= 60\r\n    ? `${seconds.toFixed()}s`\r\n    : `${(seconds / 60).toFixed()}min ${(seconds % 60).toFixed()}s`;\r\n\r\nexport const updateVisitCounter = () => {\r\n  const count = window.localStorage.getItem(storageKey);\r\n  if (!count) {\r\n    window.localStorage.setItem(storageKey, \"1\");\r\n    return;\r\n  }\r\n  const updatedCount = (parseInt(count) + 1).toString();\r\n  window.localStorage.setItem(storageKey, updatedCount);\r\n};\r\n\r\nexport const getCount = () => window.localStorage.getItem(storageKey);\r\n\r\nexport const getWeight = (system: System) =>\r\n  system === System.Metric ? \"kg\" : \"lbs\";\r\n\r\nexport const getHeight = (system: System) =>\r\n  system === System.Metric ? \"cm\" : \"inches\";\r\n","import { getHeight, getWeight } from \"../../heplers\";\r\nimport { FormVals } from \"../App\";\r\nimport \"./ValuesTable.css\";\r\n\r\nexport const ValuesTable: React.FC<FormVals> = ({ weight, height, system }) => (\r\n  <div className=\"data-container\">\r\n    <p className=\"data-container__line\">\r\n      Weight: {`${weight} ${getWeight(system)}`}\r\n    </p>\r\n    <p className=\"data-container__line\">\r\n      Heigh: {`${height} ${getHeight(system)}`}\r\n    </p>\r\n  </div>\r\n);\r\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Formik, FormikHelpers, Form, Field } from \"formik\";\nimport { InputWrapper } from \"../InputWrapper\";\nimport { ValuesTable } from \"../ValuesTable\";\nimport {\n  calculateBmi,\n  getMessage,\n  getTimeString,\n  updateVisitCounter,\n  getCount,\n  getHeight,\n  getWeight,\n} from \"../../heplers\";\nimport { FormVals, System } from \"./types\";\nimport * as Yup from \"yup\";\n\nconst ValidationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Name is required\"),\n  height: Yup.number()\n    .positive(\"Can not be negative\")\n    .required(\"Height is required\"),\n  weight: Yup.number()\n    .positive(\"Can not be negative\")\n    .required(\"Weight is required\"),\n});\n\nconst initialValues = {\n  system: System.Metric,\n  name: \"\",\n  height: 0,\n  weight: 0,\n};\n\nexport const App = () => {\n  const [step, setStep] = useState(1);\n  const [message, setMessage] = useState(\"\");\n  const [time, setTime] = useState(0);\n\n  useEffect(() => {\n    setTime(Date.now());\n    updateVisitCounter();\n  }, []);\n\n  const handleNext = () => setStep((step) => step + 1);\n  const handleBack = () => setStep((step) => step - 1);\n  const handleSubmit = (vals: FormVals, actions: FormikHelpers<FormVals>) => {\n    const { name, height, weight, system } = vals;\n    actions.setSubmitting(false);\n    const bmi = calculateBmi(height, weight, system);\n    setMessage(getMessage(name, bmi));\n    setStep((step) => step + 1);\n  };\n  const logData = () => {\n    console.table({\n      \"Time elapsed\": getTimeString((Date.now() - time) / 1000),\n      Visits: getCount(),\n    });\n  };\n\n  const isFirstStep = step === 1;\n  const isSecondStep = step === 2;\n  const isThirdStep = step === 3;\n  const isFinished = step === 4;\n\n  return (\n    <section className=\"section\">\n      <h1 className=\"title\">BMI App</h1>\n      <main className=\"container\">\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          validationSchema={ValidationSchema}\n          validateOnMount={true}\n        >\n          {({ values, handleChange, errors }) => (\n            <>\n              <ValuesTable {...values} />\n              <Form className=\"form\">\n                {isFirstStep && (\n                  <InputWrapper\n                    label=\"Name\"\n                    name=\"name\"\n                    type=\"text\"\n                    value={values.name}\n                    onChange={handleChange}\n                    onNext={handleNext}\n                    isValid={!errors.name}\n                    error={errors.name}\n                  />\n                )}\n                {isSecondStep && (\n                  <InputWrapper\n                    label={`Weight (${getWeight(values.system)})`}\n                    name=\"weight\"\n                    type=\"number\"\n                    value={values.weight}\n                    onChange={handleChange}\n                    onNext={handleNext}\n                    onBack={handleBack}\n                    isValid={!errors.weight}\n                    error={errors.weight}\n                  />\n                )}\n                {isThirdStep && (\n                  <InputWrapper\n                    label={`Height (${getHeight(values.system)})`}\n                    name=\"height\"\n                    type=\"number\"\n                    value={values.height}\n                    onBack={handleBack}\n                    onNext={logData}\n                    onChange={handleChange}\n                    hasSubmit={true}\n                    isValid={!errors.height}\n                    error={errors.height}\n                  />\n                )}\n                {!isFirstStep && !isFinished && (\n                  <Field\n                    component=\"select\"\n                    id=\"system\"\n                    name=\"system\"\n                    disabled={isFinished ? true : false}\n                    className=\"select\"\n                  >\n                    <option value=\"metric\">metric</option>\n                    <option value=\"imperial\">imperial</option>\n                  </Field>\n                )}\n              </Form>\n              {isFinished && <p className=\"message\">{message}</p>}\n            </>\n          )}\n        </Formik>\n      </main>\n    </section>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}